package application;

import javafx.fxml.FXML;

import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;

import java.util.ArrayList;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.input.MouseEvent;

import javafx.scene.control.CheckBox;

import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class guiController {
	@FXML
	private CheckBox checkID1;
	@FXML
	private TextField ID1;
	@FXML
	private CheckBox checkID2;
	@FXML
	private TextField ID2;
	@FXML
	private CheckBox checkID3;
	@FXML
	private TextField ID3;
	@FXML
	private CheckBox checkID4;
	@FXML
	private TextField ID4;
	@FXML
	private CheckBox checkID5;
	@FXML
	private TextField ID5;
	@FXML
	private CheckBox checkID6;
	@FXML
	private CheckBox checkID7;
	@FXML
	private CheckBox checkID8;
	@FXML
	private TextField ID6;
	@FXML
	private TextField ID7;
	@FXML
	private TextField ID8;
	@FXML
	private TableView allResult;
	@FXML
	private TableColumn c1;
	@FXML
	private TableColumn c2;
	@FXML
	private TableColumn c3;
	@FXML
	private TableColumn c4;
	@FXML
	private TableColumn c5;
	@FXML
	private Button inqButton;
	
	ObservableList<result> list = FXCollections.observableArrayList(); 

	// Event Listener on Button[#inqButton].onAction
	@FXML
	public void inquireAction(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#inqButton].onMouseClicked
	@FXML
	public void clickInquire(MouseEvent event) {
		// TODO Autogenerated
		System.out.println("Click!");
		String stat = "";
		
		service ser = new service();
		ArrayList<String> ans = new ArrayList();
		ArrayList<result> res = new ArrayList();
		
		// 选择了课程号为CNO的学生学号
		if (checkID1.isSelected()) {
			stat = "select Sid from sc where cid='" + ID1.getText() + "'";
			c1.setText("Sid");
			c2.setText("");
			c3.setText("");
			c4.setText("");
			c5.setText("");
			ans = ser.search(stat, 1);
			
			for (String x : ans) {
				result tmp = new result();
				tmp.setAns1(x);
				res.add(tmp);
			}
		}
		// 学号为SNO的学生选择的所有课程的课程号和成绩
		else if (checkID2.isSelected()) {
			stat = "select Cid, Score from sc where Sid='" + ID2.getText() + "'";
			c1.setText("Cid");
			c2.setText("Score");
			c3.setText("");
			c4.setText("");
			c5.setText("");
			ans = ser.search(stat, 2);
			
			for (String x : ans) {
				result tmp = new result();
				//System.out.println(x);
				String [] arr = x.split(" ");
				//System.out.println(arr[0]);
				tmp.setAns1(arr[0]);
				tmp.setAns2(arr[1]);
				res.add(tmp);
			}
		}
		// 选择了课程名为CNAME的学生的姓名
		else if (checkID3.isSelected()) {
			stat = "select student.Sname from (course natural join sc natural join student) where Cname ='" + ID3.getText() + "'";
			c1.setText("Sname");
			c2.setText("");
			c3.setText("");
			c4.setText("");
			c5.setText("");
			ans = ser.search(stat, 1);
			
			for (String x : ans) {
				//System.out.println(x);
				result tmp = new result();
				tmp.setAns1(x);
				//System.out.println(tmp.getAns1());
				res.add(tmp);
//				for (result y : res) {
//					System.out.println(y.getAns1());
//				}
				
			}
		}
		// 姓名为SNAME的学生所选所有课程的课程名，学时，学分和开课学期号
		else if (checkID4.isSelected()) {
			stat = "select Cname,Chours,Credit,Csemster from (course natural join sc natural join student) where Sname='" + ID4.getText() + "'";
			c1.setText("Cname");
			c2.setText("Chours");
			c3.setText("Credit");
			c4.setText("Csemster");
			c5.setText("");
			ans = ser.search(stat, 4);
			
			for (String x : ans) {
				result tmp = new result();
				String [] arr = x.split(" ");
				tmp.setAns1(arr[0]);
				tmp.setAns2(arr[1]);
				tmp.setAns3(arr[2]);
				tmp.setAns4(arr[3]);
				res.add(tmp);
			}
		}
		// 查询成绩在SCORE分以上的学生姓名、课程号和成绩
		else if (checkID5.isSelected()) {
			stat = "select Sname, Cid, Score from (student natural join sc) where Score>'" + ID5.getText() + "'";
			c1.setText("Sname");
			c2.setText("Cid");
			c3.setText("Score");
			c4.setText("");
			c5.setText("");
			ans = ser.search(stat, 3);
			
			for (String x : ans) {
				result tmp = new result();
				String [] arr = x.split(" ");
				tmp.setAns1(arr[0]);
				tmp.setAns2(arr[1]);
				tmp.setAns3(arr[2]);
				res.add(tmp);
			}
		}
		// 统计选课平均分低于SCORE的学生学号和成绩
		else if (checkID6.isSelected()) {
			stat = "select Sid, avg(Score) from sc group by Sid having avg(Score)<" + ID6.getText();
			c1.setText("Sid");
			c2.setText("Average score");
			c3.setText("");
			c4.setText("");
			c5.setText("");
			ans = ser.search(stat, 2);
			
			for (String x : ans) {
				result tmp = new result();
				String [] arr = x.split(" ");
				tmp.setAns1(arr[0]);
				tmp.setAns2(arr[1]);
				res.add(tmp);
			}
		}
		// 统计姓名为SNAME的学生选修的课程数
		else if (checkID7.isSelected()) {
			stat = "select count(*) from (sc natural join student) where Sname='" + ID7.getText() + "'";
			c1.setText("Number");
			c2.setText("");
			c3.setText("");
			c4.setText("");
			c5.setText("");
			ans = ser.search(stat, 1);
			
			for (String x : ans) {
				result tmp = new result();
				tmp.setAns1(x);
				res.add(tmp);
			}
		}
		// 查询课程名为CNAME的课程的最高分、最低分和平均分
		else if (checkID8.isSelected()) {
			stat = "select max(Score), min(Score), avg(Score) from (sc natural join course) where Cname='" + ID8.getText() + "'";
			c1.setText("Max");
			c2.setText("Min");
			c3.setText("Average");
			c4.setText("");
			c5.setText("");
			ans = ser.search(stat, 3);
			
			for (String x : ans) {
				result tmp = new result();
				String [] arr = x.split(" ");
				tmp.setAns1(arr[0]);
				tmp.setAns2(arr[1]);
				tmp.setAns3(arr[2]);
				res.add(tmp);
			}
		}
		
		for (result y : res) {
			System.out.println(y.getAns1());
		}
		System.out.println();
		showData(res);
	}
	
	private void configTableView() {
		c1.setCellValueFactory(new PropertyValueFactory("ans1"));
		c2.setCellValueFactory(new PropertyValueFactory("ans2"));
		c3.setCellValueFactory(new PropertyValueFactory("ans3"));
		c4.setCellValueFactory(new PropertyValueFactory("ans4"));
		c5.setCellValueFactory(new PropertyValueFactory("ans5"));
	}
	
	protected void showData(ArrayList<result> a) {
		allResult.getItems().clear();
		configTableView();
		for (result x:a) {
			//System.out.println(x.getAns1());
			list.add(x);
		}
		allResult.setItems(list);
	}
}
